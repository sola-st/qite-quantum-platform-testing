Title: `circuit_to_qasm_str` function fails to convert decomposed circuit with phased gates `PhasedX`
Author: <<ANONYMOUS>>

**Expected behavior**
I expect the `circuit_to_qasm_str` function to successfully convert the decomposed circuit to a QASM string without any errors.

**Actual behavior**
When running `circuit_to_qasm_str(tket_circ, header='qelib1')` with a decomposed circuit, I encounter a `QASMUnsupportedError` with the message "Cannot print command of type: PhasedX(0.238732, 0.5)".

**Additional information**
This issue is reproducible 100% of the time when trying to convert a decomposed circuit with gates that are not supported by the `circuit_to_qasm_str` function. The issue also occurs when trying to convert a decomposed circuit with phased gates.

**Source code**
```python
from qiskit import QuantumRegister, ClassicalRegister, QuantumCircuit
from pytket.extensions.qiskit import qiskit_to_tk
from pytket.qasm import circuit_to_qasm_str
from qiskit.qasm2 import dumps

# Section: Circuit
qr = QuantumRegister(3, name='qr')
cr = ClassicalRegister(3, name='cr')
qc = QuantumCircuit(qr, cr, name='qc')

# Apply gate operations
qc.cry(1.5, qr[1], qr[2])
qc.measure(qr, cr)

# Export to qasm

# single decomposition
circuit_to_export = qc.decompose()
print(circuit_to_export.draw(output='text'))
#                   ┌─┐
# qr_0: ────────────┤M├─────────────────────────────
#                   └╥┘                       ┌─┐
# qr_1: ─────────────╫───■─────────────────■──┤M├───
#       ┌──────────┐ ║ ┌─┴─┐┌───────────┐┌─┴─┐└╥┘┌─┐
# qr_2: ┤ Ry(0.75) ├─╫─┤ X ├┤ Ry(-0.75) ├┤ X ├─╫─┤M├
#       └──────────┘ ║ └───┘└───────────┘└───┘ ║ └╥┘
# cr: 3/═════════════╩═════════════════════════╩══╩═
#                    0                         1  2

# two decompositions
circuit_to_export_2_decompose = qc.decompose().decompose()
print(circuit_to_export_2_decompose.draw(output='text'))
#                      ┌─┐
# qr_0: ───────────────┤M├────────────────────────────────
#                      └╥┘                          ┌─┐
# qr_1: ────────────────╫───■────────────────────■──┤M├───
#       ┌─────────────┐ ║ ┌─┴─┐┌──────────────┐┌─┴─┐└╥┘┌─┐
# qr_2: ┤ R(0.75,π/2) ├─╫─┤ X ├┤ R(-0.75,π/2) ├┤ X ├─╫─┤M├
#       └─────────────┘ ║ └───┘└──────────────┘└───┘ ║ └╥┘
# cr: 3/════════════════╩════════════════════════════╩══╩═
#                       0                            1  2

print("Via Qiskit - Two Decompositions")
qasm_str_qiskit = dumps(circuit_to_export_2_decompose)
print(qasm_str_qiskit)
# OPENQASM 2.0;
# include "qelib1.inc";
# gate r(param0,param1) q0 { u3(param0,param1 - pi/2,pi/2 - param1) q0; }
# qreg qr[3];
# creg cr[3];
# r(2.5277165,pi/2) qr[2];
# cx qr[1],qr[2];
# r(-2.5277165,pi/2) qr[2];
# cx qr[1],qr[2];
# measure qr[0] -> cr[0];
# measure qr[1] -> cr[1];
# measure qr[2] -> cr[2];

print("Via TKET - Single Decomposition")
tket_circ = qiskit_to_tk(circuit_to_export)
qasm_str_tket = circuit_to_qasm_str(tket_circ, header='qelib1')
print(qasm_str_tket)
# OPENQASM 2.0;
# include "qelib1.inc";
# qreg qr[3];
# creg cr[3];
# measure qr[0] -> cr[0];
# ry(0.238732414637843*pi) qr[2];
# cx qr[1],qr[2];
# ry(3.761267585362157*pi) qr[2];
# cx qr[1],qr[2];
# measure qr[1] -> cr[1];
# measure qr[2] -> cr[2];


print("Via TKET - Two Decompositions")
tket_circ = qiskit_to_tk(circuit_to_export_2_decompose)
qasm_str_tket = circuit_to_qasm_str(tket_circ, header='qelib1')
print(qasm_str_tket)
# QASMUnsupportedError: Cannot print command of type: PhasedX(0.238732, 0.5)
```
**Tracebacks**
```python
Traceback (most recent call last):
  File "/tmp/ipykernel_168289/3055277313.py", line 87, in <module>
    qasm_str_tket = circuit_to_qasm_str(tket_circ, header='qelib1')
  File "../site-packages/pytket/qasm/qasm.py", line 1121, in circuit_to_qasm_str
    assert isinstance(command, Command)
  File "../site-packages/pytket/qasm/qasm.py", line 1691, in add_op
    # &, ^ and | gates
pytket.qasm.qasm.QASMUnsupportedError: Cannot print command of type: PhasedX(0.238732, 0.5)
```

## System

```python
import qiskit
import pytket
print(f"Qiskit version: {qiskit.__version__}")
print(f"Pytket version: {pytket.__version__}")
```

Output:

```
Qiskit version: 1.2.4
Pytket version: 1.33.1
```

Please let me know if you need any further information or clarification.



Comments:
Author: cqc-alec
Thanks for the report.

Qiskit circuits containing the "R" gate (like `circuit_to_export_2_decompose`) get converted to pytket circuits containing the `PhasedX` gate (since these are the same thing). However, there is no QASM gate corresponding to this (in the standard header "qelib1"), so conversion of that pytket circuit to QASM fails.

One workaround would be to apply a pytket rebase pass before converting to QASM, to ensure all gates are QASM-compatible. For example, you could do:

```python
from pytket.circuit import OpType
from pytket.passes import AutoRebase

AutoRebase(set([OpType.Rx, OpType.Ry, OpType.Rz, OpType.CX])).apply(tket_circ)
```

before the call to `circuit_to_qasm_str()`.

Hope this helps.
